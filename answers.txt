1. https://github.com/dijonron/CMPUT404-django-lab
2. It shows you the little congratulations page with a rocket on it
3. / returns a 404 page in DEBUG mode. /polls shows "Hello, world. You're at the polls index."
4. A migration keeps track of changes made to the models of an app and will generate SQL statements to alter and add tables to the db schema. We need them to keep track of the changes we make to models, and to apply the changes to the db. They can help make sure db schemas are the same across development environments (i.e. keeping schemas up to date across the development team)
5. We see some basic site administration tools and the apps we have registered in our project, i.e. Authentication and Authorization, and Polls (and the Choices and Questions models we've registered). To get custom models to appear you need to register them in the models' app admin.py file with the django.contrib library.
6. "You're looking at question 38.", "You're looking at the results of question 38.", "You're voting on question 38." respectively. We get a 404 if the argument is not a number. If we change the argument type to str it will accept any alphabetic characters (i.e. <str:question_id>)
7. If we hard code the urls and want to change them later, we ahve to go through the entire app and manually change each hardcoded url to the new version, otherwise they will 404. If we use the url name, we just have to update the urls.py file and the rest of the app will automatically update.
8. "Generic views abstract common patterns to the point where you donâ€™t even need to write Python code to write an app." (from the tutorial [https://docs.djangoproject.com/en/3.1/intro/tutorial04/#use-generic-views-less-code-is-better]) They can make development faster since you don;t have to write the code for those views at all. You should use generic views if you can easily set them up or subclass them to do the work you need. If you can't easily subclass a generic view it might be better to just write the code for that view from scratch.
